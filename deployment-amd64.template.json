{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "container": {
                "username": "$CONTAINER_REGISTRY_USERNAME",
                "password": "$CONTAINER_REGISTRY_PASSWORD",
                "address": "$CONTAINER_REGISTRY_ADDRESS"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                  ],
                  "NetworkMode": "Host",
                  "Devices": []
                }
              }
            }
          }
        },
        "modules": {
          "inferencemodule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.InferenceModule}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {},
                  "NetworkMode": "Host",
                  "IpcMode": "host",
                  "Priviledged": true
                }
              }
            }
          },
          "PostProcessingModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.PostProcessingModule}",
              "createOptions": {
              }
            }
          },
          "CameraCaptureModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.CameraCaptureModule}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {},
                  "Binds": [
                  ],
                  "NetworkMode": "Host",
                  "Devices": [
                    {
                      "PathOnHost": "/dev/video0",
                      "PathInContainer": "/dev/video0",
                      "CgroupPermissions": "rwm"
                    }
                  ]
                }
              }
            }
          },
          "azureblobstorageoniotedge": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azure-blob-storage:latest",
              "createOptions": {
                  "Env": [
                    "LOCAL_STORAGE_ACCOUNT_NAME=$MY_STORAGE_ACCOUNT_NAME",
                    "LOCAL_STORAGE_ACCOUNT_KEY=$MY_STORAGE_ACCOUNT_KEY"
                  ],
                  "HostConfig": {
                    "NetworkMode": "Host",
                    "Binds": [],
                    "PortBindings": {}
                  }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "InferenceModuleToPostModule": "FROM /messages/modules/InferenceModule/outputs/* INTO BrokeredEndpoint(\"/modules/PostProcessingModule/inputs/postprocessinginput\")",
          "PostModuleToIoTHub": "FROM /messages/modules/PostProcessingModule/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "azureblobstorageoniotedge": {
      "properties.desired": {
        "deviceAutoDeleteProperties": {
          "deleteOn": "false",
          "deleteAfterMinutes": "10",
          "retainWhileUploading": "true"
        },
        "deviceToCloudUploadProperties": {
          "uploadOn": "true",
          "uploadOrder": "OldestFirst",
          "cloudStorageConnectionString": "$MY_STORAGE_CONNECTION_STRING",
          "storageContainersForUpload": {
            "localcontainer": {
              "target": "storagetest"
            }
          },
          "deleteAfterUpload": "true"
        }
      }
    }
  }
}
